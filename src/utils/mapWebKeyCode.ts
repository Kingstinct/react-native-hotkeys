import { Key } from 'ts-key-enum'

import { KeyCode } from '../types'

export const keyMap: Record<KeyCode, Key | string | readonly Key[]> = {
  [KeyCode.Alt]: Key.Alt,
  [KeyCode.AltGraph]: Key.AltGraph,
  [KeyCode.ArrowDown]: Key.ArrowDown,
  [KeyCode.ArrowLeft]: Key.ArrowLeft,
  [KeyCode.ArrowRight]: Key.ArrowRight,
  [KeyCode.ArrowUp]: Key.ArrowUp,
  [KeyCode.Backspace]: Key.Backspace,
  [KeyCode.CapsLock]: Key.CapsLock,
  [KeyCode.Control]: Key.Control,
  [KeyCode.Delete]: Key.Delete,
  [KeyCode.End]: Key.End,
  [KeyCode.Enter]: Key.Enter,
  [KeyCode.Escape]: Key.Escape,
  [KeyCode.F1]: Key.F1,
  [KeyCode.F10]: Key.F10,
  [KeyCode.F11]: Key.F11,
  [KeyCode.F12]: Key.F12,
  [KeyCode.F13]: Key.F13,
  [KeyCode.F14]: Key.F14,
  [KeyCode.F15]: Key.F15,
  [KeyCode.F16]: Key.F16,
  [KeyCode.F17]: Key.F17,
  [KeyCode.F18]: Key.F18,
  [KeyCode.F19]: Key.F19,
  [KeyCode.F2]: Key.F2,
  [KeyCode.F20]: Key.F20,
  [KeyCode.F3]: Key.F3,
  [KeyCode.F4]: Key.F4,
  [KeyCode.F5]: Key.F5,
  [KeyCode.F6]: Key.F6,
  [KeyCode.F7]: Key.F7,
  [KeyCode.F8]: Key.F8,
  [KeyCode.F9]: Key.F9,
  [KeyCode.Undo]: Key.Undo,
  [KeyCode.Cut]: Key.Cut,
  [KeyCode.Paste]: Key.Paste,
  [KeyCode.Copy]: Key.Copy,
  [KeyCode.Find]: Key.Find,
  [KeyCode.Stop]: Key.MediaStop,
  [KeyCode.Redo]: [Key.Again, Key.Redo],
  [KeyCode.Help]: Key.Help,
  [KeyCode.Home]: Key.Home,
  [KeyCode.Insert]: Key.Insert,
  [KeyCode.Meta]: Key.Meta,
  [KeyCode.Mute]: Key.AudioVolumeMute,
  [KeyCode.NumberPadPlus]: Key.Add,
  [KeyCode.NumLock]: Key.NumLock,
  [KeyCode.PageDown]: Key.PageDown,
  [KeyCode.PageUp]: Key.PageUp,
  [KeyCode.Pause]: Key.Pause,
  [KeyCode.PrintScreen]: Key.PrintScreen,
  [KeyCode.ScrollLock]: Key.ScrollLock,
  [KeyCode.Shift]: Key.Shift,
  // [UnifiedKeyCode.Space]: ExtendedKeySpace.Space,
  [KeyCode.Tab]: Key.Tab,
  [KeyCode.VolumeDown]: Key.AudioVolumeDown,
  [KeyCode.VolumeUp]: Key.AudioVolumeUp,
  [KeyCode.Key0]: '0',
  [KeyCode.Key1]: '1',
  [KeyCode.Key2]: '2',
  [KeyCode.Key3]: '3',
  [KeyCode.Key4]: '4',
  [KeyCode.Key5]: '5',
  [KeyCode.Key6]: '6',
  [KeyCode.Key7]: '7',
  [KeyCode.Key8]: '8',
  [KeyCode.Key9]: '9',
  [KeyCode.KeyA]: 'a',
  [KeyCode.KeyB]: 'b',
  [KeyCode.KeyC]: 'c',
  [KeyCode.KeyD]: 'd',
  [KeyCode.KeyE]: 'e',
  [KeyCode.KeyF]: 'f',
  [KeyCode.KeyG]: 'g',
  [KeyCode.KeyH]: 'h',
  [KeyCode.KeyI]: 'i',
  [KeyCode.KeyJ]: 'j',
  [KeyCode.KeyK]: 'k',
  [KeyCode.KeyL]: 'l',
  [KeyCode.KeyM]: 'm',
  [KeyCode.KeyN]: 'n',
  [KeyCode.KeyO]: 'o',
  [KeyCode.KeyP]: 'p',
  [KeyCode.KeyQ]: 'q',
  [KeyCode.KeyR]: 'r',
  [KeyCode.KeyS]: 's',
  [KeyCode.KeyT]: 't',
  [KeyCode.KeyU]: 'u',
  [KeyCode.KeyV]: 'v',
  [KeyCode.KeyW]: 'w',
  [KeyCode.KeyX]: 'x',
  [KeyCode.KeyY]: 'y',
  [KeyCode.KeyZ]: 'z',
}

const mapWebKeyCode = (key: Key): KeyCode | null => (
  (Object.keys(keyMap).find((k) => {
    const val = keyMap[k as KeyCode] as Key | readonly Key[]
    return Array.isArray(val) ? val.includes(key) : val === key
  }) as unknown as KeyCode) || null
)

export default mapWebKeyCode
